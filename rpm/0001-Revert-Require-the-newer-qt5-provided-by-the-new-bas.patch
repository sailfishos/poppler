From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Pekka Vuorela <pekka.vuorela@jolla.com>
Date: Wed, 18 Aug 2021 10:50:18 +0300
Subject: [PATCH] Revert "Require the newer qt5 provided by the new base CI"

This reverts commit 0b34c18882ee3920c5ab9e9b953b3bb642f1b198.
---
 CMakeLists.txt                |  2 +-
 qt5/CMakeLists.txt            |  2 +-
 qt5/src/poppler-annotation.cc |  4 ++--
 qt5/src/poppler-form.cc       | 10 +++++++---
 qt5/tests/poppler-forms.cpp   |  6 +++++-
 5 files changed, 16 insertions(+), 8 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a5a478ac4c080779aac3ece4180be32e3b81f3b7..a4b14da57371cd4bf2874192f655a72040d7b701 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -211,7 +211,7 @@ else()
   message(FATAL_ERROR "Invalid ENABLE_DCTDECODER value.")
 endif()
 
-set(QT5_VERSION "5.15")
+set(QT5_VERSION "5.6")
 find_soft_mandatory_package(ENABLE_QT5 Qt5Core ${QT5_VERSION})
 find_soft_mandatory_package(ENABLE_QT5 Qt5Gui ${QT5_VERSION})
 find_soft_mandatory_package(ENABLE_QT5 Qt5Xml ${QT5_VERSION})
diff --git a/qt5/CMakeLists.txt b/qt5/CMakeLists.txt
index 431d2d357100d9f7d056704e55164df1148d5749..58b42f5e716f7b09ec1c3b57b7294021eb146678 100644
--- a/qt5/CMakeLists.txt
+++ b/qt5/CMakeLists.txt
@@ -5,7 +5,7 @@ if(ENABLE_QT_STRICT_ITERATORS)
   add_definitions(-DQT_STRICT_ITERATORS)
 endif()
 
-add_definitions(-DQT_DISABLE_DEPRECATED_BEFORE=0x050E00)
+add_definitions(-DQT_DISABLE_DEPRECATED_BEFORE=0x050500)
 add_definitions(-DQT_NO_DEPRECATED_WARNINGS)
 
 add_subdirectory(src)
diff --git a/qt5/src/poppler-annotation.cc b/qt5/src/poppler-annotation.cc
index 817951e6fd158b5def12a5af9bd6759bcb777e83..e0a3cbde60a8953dfa0163d5f80bb1d0736ee8d6 100644
--- a/qt5/src/poppler-annotation.cc
+++ b/qt5/src/poppler-annotation.cc
@@ -1515,7 +1515,7 @@ void Annotation::setModificationDate(const QDateTime &date)
 
     if (d->pdfAnnot) {
         if (date.isValid()) {
-            const time_t t = date.toSecsSinceEpoch();
+            const time_t t = date.toTime_t();
             std::unique_ptr<GooString> s = timeToDateString(&t);
             d->pdfAnnot->setModified(std::move(s));
         } else {
@@ -1553,7 +1553,7 @@ void Annotation::setCreationDate(const QDateTime &date)
     AnnotMarkup *markupann = dynamic_cast<AnnotMarkup *>(d->pdfAnnot);
     if (markupann) {
         if (date.isValid()) {
-            const time_t t = date.toSecsSinceEpoch();
+            const time_t t = date.toTime_t();
             std::unique_ptr<GooString> s = timeToDateString(&t);
             markupann->setDate(std::move(s));
         } else {
diff --git a/qt5/src/poppler-form.cc b/qt5/src/poppler-form.cc
index 728025319b2b3bb3e889ef87a7173119a84159e1..dc11d58fc43a4744c7e7e69bca6e58b8d0323925 100644
--- a/qt5/src/poppler-form.cc
+++ b/qt5/src/poppler-form.cc
@@ -1053,8 +1053,8 @@ static CertificateInfoPrivate *createCertificateInfoPrivate(const X509Certificat
         certPriv->nick_name = ci->getNickName().c_str();
 
         X509CertificateInfo::Validity certValidity = ci->getValidity();
-        certPriv->validity_start = QDateTime::fromSecsSinceEpoch(certValidity.notBefore, QTimeZone::utc());
-        certPriv->validity_end = QDateTime::fromSecsSinceEpoch(certValidity.notAfter, QTimeZone::utc());
+        certPriv->validity_start = QDateTime::fromTime_t(certValidity.notBefore, Qt::UTC);
+        certPriv->validity_end = QDateTime::fromTime_t(certValidity.notAfter, Qt::UTC);
 
         const X509CertificateInfo::PublicKeyInfo &pkInfo = ci->getPublicKeyInfo();
         certPriv->public_key = QByteArray(pkInfo.publicKey.c_str(), pkInfo.publicKey.getLength());
@@ -1163,7 +1163,7 @@ std::pair<SignatureValidationInfo, std::shared_ptr<Poppler::AsyncObject>> FormFi
 {
     auto object = std::make_shared<AsyncObject>();
     FormWidgetSignature *fws = static_cast<FormWidgetSignature *>(m_formData->fm);
-    const time_t validationTimeT = validationTime.isValid() ? validationTime.toSecsSinceEpoch() : -1;
+    const time_t validationTimeT = validationTime.isValid() ? validationTime.toTime_t() : -1;
     SignatureInfo *si = fws->validateSignatureAsync(opt & ValidateVerifyCertificate, opt & ValidateForceRevalidation, validationTimeT, !(opt & ValidateWithoutOCSPRevocationCheck), opt & ValidateUseAIACertFetch,
                                                     [obj = std::weak_ptr<AsyncObject>(object)]() {
                                                         if (auto l = obj.lock()) {
@@ -1171,11 +1171,15 @@ std::pair<SignatureValidationInfo, std::shared_ptr<Poppler::AsyncObject>> FormFi
                                                             // to ensure callers have a chance of connecting to AsyncObject::done
                                                             QMetaObject::invokeMethod(
                                                                     l.get(),
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
                                                                     [innerObj = std::weak_ptr<AsyncObject>(l)]() {
                                                                         if (auto innerLocked = innerObj.lock()) {
                                                                             emit innerLocked->done();
                                                                         }
                                                                     },
+#else
+                                                                    "done",
+#endif
                                                                     Qt::QueuedConnection);
                                                         }
                                                     });
diff --git a/qt5/tests/poppler-forms.cpp b/qt5/tests/poppler-forms.cpp
index 8d927e84f47c0114066cad02dfaba5045719f934..fd9af9c2dd04fb52a0d56521b2687eb513c641b2 100644
--- a/qt5/tests/poppler-forms.cpp
+++ b/qt5/tests/poppler-forms.cpp
@@ -264,7 +264,11 @@ int main(int argc, char **argv)
                         std::cout << "\t\t\tSignerName: "
                                   << "(null)" << std::endl;
                     }
-                    const QDateTime sviTime = QDateTime::fromSecsSinceEpoch(svi.signingTime(), Qt::UTC);
+                    // http://doc.qt.io/qt-5/qdatetime.html#fromTime_t-1
+                    // Requires Qt 5.2 -> configure.ac update
+                    // QDateTime::fromTime_t(svi->signingTime(), Qt::UTC).toString();
+                    QDateTime sviTime;
+                    sviTime.setTime_t(svi.signingTime());
                     std::cout << "\t\t\tSigningTime: " << sviTime.toString() << std::endl;
                 } break;
                 }
